// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.0
// source: delivery/grpc.proto

package grpc

import (
	context "context"
	entity "github.com/syafdia/sb/chal002/internal/domain/entity"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MovieFindOneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MovieFindOneRequest) Reset() {
	*x = MovieFindOneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_grpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieFindOneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieFindOneRequest) ProtoMessage() {}

func (x *MovieFindOneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_grpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieFindOneRequest.ProtoReflect.Descriptor instead.
func (*MovieFindOneRequest) Descriptor() ([]byte, []int) {
	return file_delivery_grpc_proto_rawDescGZIP(), []int{0}
}

func (x *MovieFindOneRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type MovieFindOneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *entity.MovieDetail `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *MovieFindOneResponse) Reset() {
	*x = MovieFindOneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_grpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieFindOneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieFindOneResponse) ProtoMessage() {}

func (x *MovieFindOneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_grpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieFindOneResponse.ProtoReflect.Descriptor instead.
func (*MovieFindOneResponse) Descriptor() ([]byte, []int) {
	return file_delivery_grpc_proto_rawDescGZIP(), []int{1}
}

func (x *MovieFindOneResponse) GetPayload() *entity.MovieDetail {
	if x != nil {
		return x.Payload
	}
	return nil
}

type MovieFindMultipleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchWord string `protobuf:"bytes,1,opt,name=search_word,json=searchWord,proto3" json:"search_word,omitempty"`
	Pagination int32  `protobuf:"varint,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *MovieFindMultipleRequest) Reset() {
	*x = MovieFindMultipleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_grpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieFindMultipleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieFindMultipleRequest) ProtoMessage() {}

func (x *MovieFindMultipleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_grpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieFindMultipleRequest.ProtoReflect.Descriptor instead.
func (*MovieFindMultipleRequest) Descriptor() ([]byte, []int) {
	return file_delivery_grpc_proto_rawDescGZIP(), []int{2}
}

func (x *MovieFindMultipleRequest) GetSearchWord() string {
	if x != nil {
		return x.SearchWord
	}
	return ""
}

func (x *MovieFindMultipleRequest) GetPagination() int32 {
	if x != nil {
		return x.Pagination
	}
	return 0
}

type MovieFindMultipleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload []*entity.MovieSummary `protobuf:"bytes,1,rep,name=payload,proto3" json:"payload,omitempty"`
}

func (x *MovieFindMultipleResponse) Reset() {
	*x = MovieFindMultipleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_grpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieFindMultipleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieFindMultipleResponse) ProtoMessage() {}

func (x *MovieFindMultipleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_grpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieFindMultipleResponse.ProtoReflect.Descriptor instead.
func (*MovieFindMultipleResponse) Descriptor() ([]byte, []int) {
	return file_delivery_grpc_proto_rawDescGZIP(), []int{3}
}

func (x *MovieFindMultipleResponse) GetPayload() []*entity.MovieSummary {
	if x != nil {
		return x.Payload
	}
	return nil
}

var File_delivery_grpc_proto protoreflect.FileDescriptor

var file_delivery_grpc_proto_rawDesc = []byte{
	0x0a, 0x13, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x1a,
	0x13, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x25, 0x0a, 0x13, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x46, 0x69, 0x6e,
	0x64, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x45, 0x0a, 0x14, 0x4d,
	0x6f, 0x76, 0x69, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x22, 0x5b, 0x0a, 0x18, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x57, 0x6f, 0x72, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x4b, 0x0a, 0x19, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x32, 0xb5, 0x01, 0x0a,
	0x0c, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4a, 0x0a,
	0x07, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x12, 0x1d, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0c, 0x46, 0x69, 0x6e,
	0x64, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x12, 0x22, 0x2e, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x46, 0x69,
	0x6e, 0x64, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x18, 0x5a, 0x16, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x2f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_delivery_grpc_proto_rawDescOnce sync.Once
	file_delivery_grpc_proto_rawDescData = file_delivery_grpc_proto_rawDesc
)

func file_delivery_grpc_proto_rawDescGZIP() []byte {
	file_delivery_grpc_proto_rawDescOnce.Do(func() {
		file_delivery_grpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_delivery_grpc_proto_rawDescData)
	})
	return file_delivery_grpc_proto_rawDescData
}

var file_delivery_grpc_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_delivery_grpc_proto_goTypes = []interface{}{
	(*MovieFindOneRequest)(nil),       // 0: delivery.MovieFindOneRequest
	(*MovieFindOneResponse)(nil),      // 1: delivery.MovieFindOneResponse
	(*MovieFindMultipleRequest)(nil),  // 2: delivery.MovieFindMultipleRequest
	(*MovieFindMultipleResponse)(nil), // 3: delivery.MovieFindMultipleResponse
	(*entity.MovieDetail)(nil),        // 4: entity.MovieDetail
	(*entity.MovieSummary)(nil),       // 5: entity.MovieSummary
}
var file_delivery_grpc_proto_depIdxs = []int32{
	4, // 0: delivery.MovieFindOneResponse.payload:type_name -> entity.MovieDetail
	5, // 1: delivery.MovieFindMultipleResponse.payload:type_name -> entity.MovieSummary
	0, // 2: delivery.MovieService.FindOne:input_type -> delivery.MovieFindOneRequest
	2, // 3: delivery.MovieService.FindMultiple:input_type -> delivery.MovieFindMultipleRequest
	1, // 4: delivery.MovieService.FindOne:output_type -> delivery.MovieFindOneResponse
	3, // 5: delivery.MovieService.FindMultiple:output_type -> delivery.MovieFindMultipleResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_delivery_grpc_proto_init() }
func file_delivery_grpc_proto_init() {
	if File_delivery_grpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_delivery_grpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieFindOneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_grpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieFindOneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_grpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieFindMultipleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_grpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieFindMultipleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_delivery_grpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_delivery_grpc_proto_goTypes,
		DependencyIndexes: file_delivery_grpc_proto_depIdxs,
		MessageInfos:      file_delivery_grpc_proto_msgTypes,
	}.Build()
	File_delivery_grpc_proto = out.File
	file_delivery_grpc_proto_rawDesc = nil
	file_delivery_grpc_proto_goTypes = nil
	file_delivery_grpc_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MovieServiceClient is the client API for MovieService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MovieServiceClient interface {
	FindOne(ctx context.Context, in *MovieFindOneRequest, opts ...grpc.CallOption) (*MovieFindOneResponse, error)
	FindMultiple(ctx context.Context, in *MovieFindMultipleRequest, opts ...grpc.CallOption) (*MovieFindMultipleResponse, error)
}

type movieServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMovieServiceClient(cc grpc.ClientConnInterface) MovieServiceClient {
	return &movieServiceClient{cc}
}

func (c *movieServiceClient) FindOne(ctx context.Context, in *MovieFindOneRequest, opts ...grpc.CallOption) (*MovieFindOneResponse, error) {
	out := new(MovieFindOneResponse)
	err := c.cc.Invoke(ctx, "/delivery.MovieService/FindOne", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *movieServiceClient) FindMultiple(ctx context.Context, in *MovieFindMultipleRequest, opts ...grpc.CallOption) (*MovieFindMultipleResponse, error) {
	out := new(MovieFindMultipleResponse)
	err := c.cc.Invoke(ctx, "/delivery.MovieService/FindMultiple", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MovieServiceServer is the server API for MovieService service.
type MovieServiceServer interface {
	FindOne(context.Context, *MovieFindOneRequest) (*MovieFindOneResponse, error)
	FindMultiple(context.Context, *MovieFindMultipleRequest) (*MovieFindMultipleResponse, error)
}

// UnimplementedMovieServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMovieServiceServer struct {
}

func (*UnimplementedMovieServiceServer) FindOne(context.Context, *MovieFindOneRequest) (*MovieFindOneResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindOne not implemented")
}
func (*UnimplementedMovieServiceServer) FindMultiple(context.Context, *MovieFindMultipleRequest) (*MovieFindMultipleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindMultiple not implemented")
}

func RegisterMovieServiceServer(s *grpc.Server, srv MovieServiceServer) {
	s.RegisterService(&_MovieService_serviceDesc, srv)
}

func _MovieService_FindOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MovieFindOneRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MovieServiceServer).FindOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/delivery.MovieService/FindOne",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MovieServiceServer).FindOne(ctx, req.(*MovieFindOneRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MovieService_FindMultiple_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MovieFindMultipleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MovieServiceServer).FindMultiple(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/delivery.MovieService/FindMultiple",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MovieServiceServer).FindMultiple(ctx, req.(*MovieFindMultipleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MovieService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "delivery.MovieService",
	HandlerType: (*MovieServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FindOne",
			Handler:    _MovieService_FindOne_Handler,
		},
		{
			MethodName: "FindMultiple",
			Handler:    _MovieService_FindMultiple_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "delivery/grpc.proto",
}
